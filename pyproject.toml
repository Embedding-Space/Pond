[project]
name = "pond"
version = "0.1.0"
description = "Semantic memory system for AI assistants"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.32.0",
    "httpx>=0.27.0",
    "asyncpg>=0.30.0",
    "pgvector>=0.3.0",
    "pydantic>=2.9.0",
    "pydantic-settings>=2.5.0",
    "numpy>=1.26.0",
    "click>=8.1.0", # For CLI
    "fastmcp>=0.2.0", # For MCP server
    "spacy>=3.7.0", # For NLP and entity extraction
    "inflect>=7.0.0", # For tag normalization
    "pendulum>=3.0.0", # For datetime parsing and formatting
    "pytimeparse>=1.1.8",
]

[project.scripts]
pond = "pond.cli.main:cli"
pond-mcp = "pond.mcp.server:main"

[project.optional-dependencies]
test = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "httpx>=0.27.0",  # For test client
]
dev = [
    "ruff>=0.8.0",  # Linting and formatting
    "pyright>=1.1.0",  # Type checking
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pytest-benchmark>=5.1.0",
]

[tool.uv]
package = true

[tool.hatch.build.targets.wheel]
packages = ["src/pond"]

# Ruff configuration for linting and formatting
[tool.ruff]
line-length = 88
target-version = "py312"
src = ["src"]

[tool.ruff.lint]
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # pyflakes
    "I",     # isort (import sorting)
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "UP",    # pyupgrade
    "N",     # pep8-naming
    "ASYNC", # flake8-async
    "S",     # flake8-bandit (security)
    "DTZ",   # flake8-datetimez
    "RUF",   # ruff-specific rules
]
ignore = [
    "E501",   # Line too long (handled by formatter)
    "S101",   # Use of assert (needed for tests)
    "S104",   # Hardcoded bind all interfaces (0.0.0.0)
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "S106"]  # Allow asserts and hardcoded passwords in tests

[tool.ruff.lint.isort]
known-first-party = ["pond"]

# Type checking with pyright
[tool.pyright]
pythonVersion = "3.12"
pythonPlatform = "All"
typeCheckingMode = "standard"
reportUnknownMemberType = false
reportUnknownArgumentType = false
reportUnknownVariableType = false
reportMissingTypeStubs = false
reportUnnecessaryTypeIgnoreComment = true
include = ["src"]
exclude = ["**/__pycache__", ".venv"]
